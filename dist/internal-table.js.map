{"version":3,"file":"internal-table.js","sourceRoot":"","sources":["../src/internal-table.ts"],"names":[],"mappings":"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","sourcesContent":["import { TABLE_STYLE, TABLE_BORDER_STYLES, COLUMN_ALIGNMENT, COLOR } from './table-constants';\nimport { createColum, createRow } from './table-helpers';\nimport { printTable } from './internal-table-printer';\n\nexport class TableInternal {\n    tableStyle: any;\n    columns: any;\n    rows: any;\n    style: any;\n    styleDetails: any;\n\n    initSimple(columns) {\n        this.tableStyle = TABLE_STYLE.thinBorder;\n        this.columns = columns.map(column => (\n            {\n                name: column,\n                alignment: COLUMN_ALIGNMENT.right\n            })\n        );\n    }\n\n    initDefault() {\n        this.tableStyle = TABLE_STYLE.thinBorder;\n        this.columns = [];\n    }\n\n    initDetailed(options) {\n        this.tableStyle = (options.style && TABLE_STYLE[options.style]) || TABLE_STYLE.thinBorder;\n        this.columns = options.columns && options.columns.map(column => (\n            {\n                name: column.name,\n                alignment: column.alignment || COLUMN_ALIGNMENT.right\n            })\n        ) || [];\n    }\n\n    constructor(options) {\n        if (options === undefined) {\n            this.initDefault();\n        } else if (options instanceof Array) {\n            this.initSimple(options);\n        } else if (typeof options === 'object') {\n            this.initDetailed(options);\n        }\n        this.rows = [];\n    }\n\n    setBorderStyle(style, details) {\n        switch (style) {\n            case TABLE_BORDER_STYLES.customized:\n                this.style = TABLE_BORDER_STYLES.customized;\n                this.styleDetails = details;\n            case TABLE_BORDER_STYLES.thinBorder:\n            case TABLE_BORDER_STYLES.fatBorder:\n                this.style = style;\n            default:\n                this.style = style;\n        }\n\n    }\n\n    createColumnFromRow(text) {\n        const colNames = this.columns.map(col => col.name);\n        for (let key in text) {\n            if (!colNames.includes(key)) {\n                this.columns.push(createColum(key));\n            }\n        }\n    }\n\n    addColumn(text) {\n        this.columns.push(createColum(text));\n    }\n\n    addColumns(toBeInsertedColumns) {\n        for (let toBeInsertedColumn of toBeInsertedColumns) {\n            this.addColumn(toBeInsertedColumn);\n        }\n    }\n\n    addRow(text, options) {\n        this.createColumnFromRow(text);\n        this.rows.push(createRow((options && options.color) || COLOR.white, text));\n    }\n\n    addRows(toBeInsertedRows) {\n        for (let toBeInsertedRow of toBeInsertedRows) {\n            this.addRow(toBeInsertedRow, undefined);\n        }\n    }\n\n    getColumns() {\n        return this.columns;\n    }\n\n    printTable() {\n        return printTable(this);\n    }\n}\n"]}