{"version":3,"file":"internal-table-printer.js","sourceRoot":"","sources":["../src/internal-table-printer.ts"],"names":[],"mappings":"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","sourcesContent":["import { COLOR } from \"./table-constants\";\nimport { ColoredConsoleLine } from \"./colored-console-line\";\nimport {\n  textWithPadding,\n  printTableHorizontalBorders,\n  createRow,\n  createHeaderAsRow,\n  findMaxLenOfColumn\n} from \"./table-helpers\";\nimport { TableInternal } from \"./internal-table\";\n\nfunction prepareLineAndPrint(tableStyle, columns, row) {\n  let line = new ColoredConsoleLine();\n  line.addWithColor(COLOR.white, tableStyle.vertical);\n  for (let column of columns) {\n    line.addWithColor(COLOR.white, \" \");\n    line.addWithColor(\n      row.color,\n      textWithPadding(\n        `${row.text[column.name] || \"\"}`,\n        column.alignment,\n        column.max_ln\n      )\n    );\n    line.addWithColor(COLOR.white, \" \" + tableStyle.vertical);\n  }\n  return line.printConsole();\n}\n\n// ║ 1     ║     I would like some red wine please ║ 10.212 ║\nfunction printRow(table, row) {\n  let ret = [];\n  ret.push(prepareLineAndPrint(table.tableStyle, table.columns, row));\n  return ret;\n}\n\n/* \n ╔═══════╦═══════════════════════════════════════╦════════╗\n ║ index ║                                  text ║  value ║\n ╟═══════╬═══════════════════════════════════════╬════════╢\n*/\nfunction printTableHeaders(table) {\n  let ret = [];\n\n  // ╔═══════╦═══════════════════════════════════════╦════════╗\n  ret.push(\n    printTableHorizontalBorders(\n      table.tableStyle.headerTop,\n      table.columns.map(m => m.max_ln)\n    )\n  );\n\n  // ║ index ║                                  text ║  value ║\n  let row = createHeaderAsRow(createRow, table.columns);\n  ret.push(prepareLineAndPrint(table.tableStyle, table.columns, row));\n\n  // ╟═══════╬═══════════════════════════════════════╬════════╢\n  ret.push(\n    printTableHorizontalBorders(\n      table.tableStyle.headerBottom,\n      table.columns.map(m => m.max_ln)\n    )\n  );\n\n  return ret;\n}\n\nfunction printTableEnding(table) {\n  let ret = [];\n  // ╚═══════╩═══════════════════════════════════════╩════════╝\n  ret.push(\n    printTableHorizontalBorders(\n      table.tableStyle.tableBottom,\n      table.columns.map(m => m.max_ln)\n    )\n  );\n  return ret;\n}\n\nfunction calculateColumnProperty(table) {\n  for (let column of table.columns) {\n    column.max_ln = findMaxLenOfColumn(column, table.rows);\n  }\n}\n\nfunction printTableTest(table) {\n  calculateColumnProperty(table);\n  let ret = [];\n  printTableHeaders(table).forEach(row => ret.push(row));\n  for (let row of table.rows) {\n    printRow(table, row).forEach(row => ret.push(row));\n  }\n  printTableEnding(table).forEach(row => ret.push(row));\n  return ret;\n}\n\nexport function printTable(table) {\n  printTableTest(table);\n}\n\nexport function printSimpleTableTest(rows) {\n  \n  let table = new TableInternal();\n  table.addRows(rows);\n  return printTableTest(table);\n}\n\nexport function printSimpleTable(rows) {\n  printSimpleTableTest(rows);\n}"]}