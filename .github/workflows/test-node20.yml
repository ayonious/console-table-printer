name: Test Node.js 20.x

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-node20:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'

    - name: Install all dependencies
      run: yarn install --frozen-lockfile

    - name: Build package
      run: yarn build

    - name: Run project tests
      run: yarn test

    - name: Pack and test
      run: |
        yarn pack
        tar -xf console-table-printer-*.tgz
        cd package
        yarn init -y
        yarn add ../console-table-printer-*.tgz
        cat > test.js << 'EOL'
        const { Table } = require('console-table-printer');
        const assert = require('assert');

        // Test comprehensive table features
        const table = new Table({
          title: 'Comprehensive Test Table',
          columns: [
            { name: 'id', alignment: 'right', color: 'blue' },
            { name: 'name', title: 'PRODUCT NAME', maxLen: 20 },
            { name: 'price', alignment: 'left' },
            { name: 'stock', title: 'IN STOCK' }
          ],
          sort: (row1, row2) => row1.id - row2.id
        });

        // Test row addition and data handling
        table.addRows([
          { id: 1, name: 'Very Long Product Name That Should be Truncated', price: 10.99, stock: true },
          { id: 2, name: 'Product 2', price: 20.50, stock: false },
          { id: 3, name: 'Product 3', price: 30.00, stock: true }
        ]);

        const render = table.render();

        // Test column configuration
        assert(render.includes('PRODUCT NAME'), 'Custom column title not found');
        assert(render.includes('IN STOCK'), 'Custom column title not found');

        // Test color codes
        assert(render.includes('\x1b[34m'), 'Blue color code not found');

        // Test data formatting
        assert(render.includes('10.99'), 'Price formatting incorrect');
        assert(render.includes('true'), 'Boolean value incorrect');
        assert(render.includes('false'), 'Boolean value incorrect');

        // Test sorting
        const lines = render.split('\n');
        const idLine = lines.find(line => line.includes('1'));
        assert(idLine && idLine.includes('10.99'), 'Sorting not working correctly');

        console.log('âœ… Node 20.x: Comprehensive functionality tests passed!');

        // Visual verification
        table.printTable();
        EOL

        node test.js 